openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8082
  description: Generated server url
tags:
- name: Customers
  description: Customer Management API
paths:
  /api/customers/{id}:
    get:
      tags:
      - Customers
      summary: Get a customer by ID
      description: "Retrieve a customer by their unique ID, including calculated membership\
        \ tier."
      operationId: getCustomerById
      parameters:
      - name: id
        in: path
        description: ID of the customer to retrieve
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Customer found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponseDTO'
        "404":
          description: Customer not found
    put:
      tags:
      - Customers
      summary: Update an existing customer
      operationId: updateCustomer
      parameters:
      - name: id
        in: path
        description: ID of the customer to update
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "400":
          description: Invalid input
        "404":
          description: Customer not found
        "200":
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    delete:
      tags:
      - Customers
      summary: Delete a customer by ID
      operationId: deleteCustomer
      parameters:
      - name: id
        in: path
        description: ID of the customer to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Customer not found
        "204":
          description: Customer deleted
  /api/customers:
    get:
      tags:
      - Customers
      summary: Get customers
      description: "Retrieve all customers, or filter by name or email. Returns Customer\
        \ details including calculated membership tier."
      operationId: getCustomers
      parameters:
      - name: name
        in: query
        description: Filter by customer's name
        required: false
        schema:
          type: string
      - name: email
        in: query
        description: Filter by customer's email
        required: false
        schema:
          type: string
      responses:
        "404":
          description: Customer not found by email
        "200":
          description: Customers found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponseDTO'
    post:
      tags:
      - Customers
      summary: Create a new customer
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "400":
          description: Invalid input
        "201":
          description: Customer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /api/customers/{id}/tier:
    get:
      tags:
      - Customers
      summary: Get membership tier for a customer by ID
      description: Calculate and return the membership tier for a customer.
      operationId: getCustomerMembershipTier
      parameters:
      - name: id
        in: path
        description: ID of the customer to get tier for
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Customer not found
        "200":
          description: Tier calculated successfully
          content:
            text/plain:
              schema:
                type: string
components:
  schemas:
    Customer:
      required:
      - annualSpend
      - email
      - name
      type: object
      properties:
        customerId:
          type: integer
          format: int64
        name:
          maxLength: 100
          minLength: 0
          type: string
        email:
          maxLength: 255
          minLength: 0
          type: string
        annualSpend:
          minimum: 0.0
          exclusiveMinimum: false
          type: number
        lastPurchaseDate:
          type: string
          format: date-time
    CustomerResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        annualSpend:
          type: number
        lastPurchaseDate:
          type: string
          format: date-time
        memberShipTier:
          type: string
